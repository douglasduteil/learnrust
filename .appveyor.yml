
environment:
  matrix:
  # 32/64 bit MSVC builds.
  - CHANNEL: stable
    TARGET: x86_64-pc-windows-msvc
  - CHANNEL: stable
    TARGET: i686-pc-windows-msvc

  # 32/64-bit MinGW builds.
  - CHANNEL: stable
    MINGW: mingw64
    TARGET: x86_64-pc-windows-gnu
  - CHANNEL: stable
    MINGW: mingw32
    TARGET: i686-pc-windows-gnu

install:
  - appveyor-retry appveyor DownloadFile https://win.rustup.rs/ -FileName rustup-init.exe
  - rustup-init.exe -y --default-host %TARGET% --default-toolchain %CHANNEL%
  - set PATH=%PATH%;C:\Users\appveyor\.cargo\bin  
  - if defined MINGW set PATH=%PATH%;C:\msys64\%MINGW%\bin;C:\msys64\usr\bin;
  - rustc -vV
  - cargo -vV

clone_depth: 1

build: false

test_script:
  - cargo build --target %TARGET%
  - cd workshopper
  - cargo test
  - cd ..
  - cargo test
  - cargo build --target %TARGET% --release

cache:
  - C:\Users\appveyor\.cargo\registry

before_deploy:
  - ps: |
        $NAME = "learnrust-${env:APPVEYOR_REPO_TAG_NAME}-stable-${env:TARGET}"
        New-Item -Path $NAME -ItemType directory
        Copy-Item target/release/learnrust.exe "${NAME}/"
        Copy-Item LICENSE "${NAME}/"
        Copy-Item README.md "${NAME}/"
        7z a -ttar "${NAME}.tar" "${NAME}"
        7z a "${NAME}.tar.xz" "${NAME}.tar"
        Push-AppveyorArtifact "${NAME}.tar.xz"
deploy:
  provider: GitHub
  auth_token: $(GITHUB_TOKEN)
  artifact: /.*\.tar.xz/
  on:
    appveyor_repo_tag: true
